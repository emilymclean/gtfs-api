name: Generate for Canberra

on:
  push:
    branches: 
      - "main"
      - "develop"
  pull_request:
    branches: 
      - "main"
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.13'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api-generator/requirements.txt
      - name: Download data
        run: |
          wget -q --header="Authorization: Basic ${{ secrets.TC_API_AUTH }}" https://transport.api.act.gov.au/gtfs/data/gtfs/v2/google_transit.zip
          
          mkdir canberra
          unzip google_transit.zip -d canberra/raw
      - name: Preprocess
        run: |
          python preprocessor/preprocessor.py process -i canberra/raw -o canberra/normal
      - name: Run script
        run: |
          python api-generator/script.py generate -c config-canberra.yml -i canberra/normal -i event-service -g groups.yml -o build/canberra
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - run: aws s3 cp --recursive build s3://${{ github.ref == 'refs/heads/main' && vars.AWS_BUCKET || vars.AWS_DEVELOP_BUCKET }}
  build-content:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Install pkl
        uses: pkl-community/setup-pkl@v0
        with:
          pkl-version: 0.27.1
      - name: Generate content
        run: |
          ./render-content.sh
          mkdir -p build/canberra/v1
          mkdir -p static
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - run: aws s3 cp --recursive build s3://${{ github.ref == 'refs/heads/main' && vars.AWS_BUCKET || vars.AWS_DEVELOP_BUCKET }}
      - run: aws s3 cp --recursive static s3://${{ github.ref == 'refs/heads/main' && vars.AWS_BUCKET || vars.AWS_DEVELOP_BUCKET }}
  build-trip-index:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.13'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api-generator/requirements.txt
      - name: Download data
        run: |
          wget -q --header="Authorization: Basic ${{ secrets.TC_API_AUTH }}" https://transport.api.act.gov.au/gtfs/data/gtfs/v2/google_transit.zip
          
          mkdir canberra
          unzip google_transit.zip -d canberra/raw
      - name: Preprocess
        run: |
          python preprocessor/preprocessor.py process -i canberra/raw -o canberra/normal
      - name: Run script
        run: |
          python api-generator/script.py trip-index -c config-canberra.yml -g groups.yml -i canberra/normal -o build
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - run: aws s3 cp --recursive build s3://${{ vars.AWS_PRIVATE_BUCKET }}
  test-site:
    runs-on: ubuntu-latest
    steps:
      - run: |
          wget --content-on-error -qO - https://www.transport.act.gov.au/news/service-alerts-and-updates
  keep-alive:
    permissions:
      actions: write
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: liskin/gh-workflow-keepalive@v1
                