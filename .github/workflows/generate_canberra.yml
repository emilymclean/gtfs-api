name: Generate for Canberra

on:
  push:
    branches: [ "main", "develop" ]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      api-changes: ${{ steps.changed-files-content.outputs.only_changed == 'false' }}
    steps:
      - uses: actions/checkout@v4
      - name: Get all test, doc and src files that have changed
        id: changed-files-content
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **.pkl
          files_ignore: |
            .github/workflows/**
            README.md
            LICENSE.md   
  build:
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ needs.changes.outputs.api-changes }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.13'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r script/requirements.txt
      - name: Download data
        run: |
          wget -q https://www.transport.act.gov.au/googletransit/google_transit.zip
          wget -q https://www.transport.act.gov.au/googletransit/google_transit_lr.zip
          
          mkdir canberra
          unzip google_transit.zip -d canberra/normal
          unzip google_transit_lr.zip -d canberra/lr
      - name: Run script
        run: |
          python script/script.py -c config-canberra.yml -i canberra/normal -i canberra/lr -o build/canberra/v1
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - run: aws s3 sync build s3://${{ github.ref == 'refs/heads/main' && vars.AWS_BUCKET || vars.AWS_DEVELOP_BUCKET }}
  build-content:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Install pkl
        uses: pkl-community/setup-pkl@v0
        with:
          pkl-version: 0.27.1
      - name: Generate content
        run: |
          ./render-content.sh
          mkdir -p build/canberra/v1
          cp content/content{.json,.json.sha,.pb,.pb.sha} build/canberra/v1
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - run: aws s3 sync build s3://${{ github.ref == 'refs/heads/main' && vars.AWS_BUCKET || vars.AWS_DEVELOP_BUCKET }}
  keep-alive:
    permissions:
      actions: write
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: liskin/gh-workflow-keepalive@v1
                